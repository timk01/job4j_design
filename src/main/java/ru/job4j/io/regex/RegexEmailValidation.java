package ru.job4j.io.regex;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * Допустим, нам нужно найти адреса электронной почты в тексте.
 * Запись адреса электронной почты может выглядеть примерно так:
 * peter-2022@example.com.
 * По аналогии с предыдущим примером, разобьем данную запись на простейшие части:
 * любой символ от 1 раза, знак собаки, любой символ от 1 раза, точка, любой символ от 1 раза.
 *
 * То есть мы разбили адрес электронной почты на самые универсальные и обширные варианты,
 * а также выявили обязательные в адресе электронной почты символы собаки и точки.
 * Простейшая реализация выглядит так:
 * \S - все символы, кроме пробела.
 * {1,} - 1 и более раз ((вообще говоря уместно и +))
 *
 * \\S{1,}@\\S{1,}\\.\\S{1,}
 * или + вместо этого всего
 * оно "жадное", т.е. идет от символа (сколь угодно)
 * , доходит до первой попавшейся @ (или конца строки)
 * идет обртано, доходит до @ - ОК
 * теперь идет дальше по элементам, доходит до точки, ловится обратно
 */

public class RegexEmailValidation {
    public static void main(String[] args) {
        Pattern pattern = Pattern.compile("\\S+@\\S+\\.\\S+");
        String text = "peter-2022@example.com example65@mail_box.ru 123_45@example-mailbox.com";
        Matcher matcher = pattern.matcher(text);
        while (matcher.find()) {
            System.out.println("Найдено совпадение: " + matcher.group());
        }
    }
}
